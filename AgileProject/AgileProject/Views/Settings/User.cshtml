@using Microsoft.AspNetCore.Identity
@using AgileProject.Entidades
@*@inject SignInManager<AspNetUsers> SignInManager*@
@*@inject UserManager<AspNetUsers> UserManager*@

@{
    ViewData["Title"] = "Settings | Users";
}



@if (ViewBag.IsSignedIn != null)
{
    @if (ViewBag.IsSignedIn)
    {

        <h1>Manage your configuration</h1>

        <div>
            <h2>Change your settings</h2>
            <hr />
            <div class="row">
                <div class="col-md-3">
                    <partial name="_Menu" />

                </div>

                <form id="profile-form" asp-controller="Settings" asp-action="SaveUser" method="post">
                    <div class="col-md-9">
                        <h3>
                            <a class="text-dark" id="profile" href="/Settings">Settings</a> <span>&nbsp;>&nbsp;</span>
                            <a class="text-dark" id="profile" href="/Settings/ListUsers">Change users information</a><span>
                                &nbsp;>&nbsp;
                            </span><span><span id="eventNameTitleCRUD"></span> User</span>
                        </h3>

                        <div class="row">
                            <div class="col-md-8">
                                <div class="row" style="margin-bottom: 15px; margin-left: 1px;">
                                    <div style="display:inline;">
                                        <div style="float:left;">
                                            <h3></h3>

                                        </div>


                                    </div>
                                </div>

                                @*<div id="accordion" class="myaccordion">
                                    <div class="card">
                                        <div class="card-header" id="headingOne">
                                            <div class="mb-0">
                                                <a id="add" title="" class="text-dark collapsed" style="cursor:pointer;" data-toggle="collapse" data-target="#collapseOne" aria-expanded="false" aria-controls="collapseOne">
                                                    Profile
                                                    <div style="float:right;">

                                                        <span class="fa-stack fa-sm">
                                                            <i class="fas fa-circle fa-stack-2x"></i>
                                                            <i class="fas fa-solid fa-chevron-down fa-stack-1x fa-inverse"></i>
                                                        </span>
                                                    </div>

                                                </a>
                                            </div>
                                        </div>
                                        <div id="collapseOne" class="collapse" aria-labelledby="headingOne" data-parent="#accordion">
                                            <div class="card-body">*@
                                <div id="divProfile">
                                    <div class="form-floating" style="display: none;">
                                        <input class="form-control" type="text" id="Id" name="Id" value="@Model.Id" />
                                        <label class="form-label" for="Id">Id</label>
                                    </div>
                                    <div class="form-floating" style="display:none;">
                                        <input class="form-control" type="text" id="UserName" name="UserName" value="@ViewBag.UserName" />
                                        <label class="form-label" for="UserName">Username</label>
                                    </div>

                                    <partial name="_UserProfile" />

                                    <div class="form-floating">
                                        <input class="form-control" type="text" data-val="true" id="Email" name="Email" value="@Model.Email" />
                                        <label class="form-label" for="Email">Email</label>
                                        <span id="requiredEmail" style="display:none" class="text-danger field-validation-error" data-valmsg-for="Email" data-valmsg-replace="true">
                                            <span id="requiredEmail-error" class="">The Current email field is required.</span>
                                        </span>
                                    </div>

                                    <br />

                                </div>
                                @*</div>
                                        </div>
                                    </div>
                                    <br />
                                    <div class="card">
                                        <div class="card-header" id="headingTwo">
                                            <div class="mb-0">
                                                <a class="d-flex align-items-center justify-content-between text-dark collapsed" style="cursor:pointer;" data-toggle="collapse" data-target="#collapseTwo" aria-expanded="false" aria-controls="collapseTwo">
                                                    Teamwork
                                                    <div style="float: right;">
                                                        <span class="fa-stack fa-2x">
                                                            <i class="fas fa-circle fa-stack-2x"></i>
                                                            <i class="fas fa-solid fa-chevron-down fa-stack-1x fa-inverse"></i>
                                                        </span>
                                                    </div>

                                                </a>
                                            </div>
                                        </div>
                                        <div id="collapseTwo" class="collapse" aria-labelledby="headingTwo" data-parent="#accordion">
                                            <div class="card-body">*@
                                <div id="divOrganization">
                                    <partial name="_UserOrganization" />


                                </div>
                                @*</div>
                                            </div>
                                        </div>

                                    </div>*@

                                <br />
                                <br />
                                <button id="update-profile-button" type="submit" class="w-100 btn btn-lg btn-primary">Save</button>
                                <input name="__RequestVerificationToken" type="hidden" value="CfDJ8DsfhTB1faNAgHLDIY0x9vl4T5NT40_LZbcUT6QliFP4TuKlxintAI8UvfkKk8RyDY09yksaWBfHRFlgw7y4htrpexW2KwZK826pwuYJ9lkSKK1Hlhkj-2pPs8m-TtFDxhVBXWeWYjec13SaVMJhVUzjFq7G4o0BrViqBnsk-Lvs4CGJampER3fwMZbZK408IQ" />


                            </div>
                        </div>

                    </div>


                </form>


            </div>
        </div>



    }
}

else
{
    <partial name="_LoginRegisterPartial" />
}


@section Scripts
{

    <script type="text/javascript">
    //var element = document.getElementById("TeamsListStr");
    //console.log(element.value);

    var model = JSON.parse('@Html.Raw(Json.Serialize(Model))');
    //console.log(model);


    inicio();

    function inicio() {
        selectElement()
        evalCheckOpcion();


        var el = document.getElementsByName("settings");

        el.forEach((item, index, arreglo) => {
            //console.log(item);
            item.classList.add("active");
        });

        var id = document.getElementById("Id").value;
        var eventNameTitleCRUD = document.getElementById("eventNameTitleCRUD");
        eventNameTitleCRUD.innerHTML = "New";
        if (!isNullOrEmpty(id)){
            eventNameTitleCRUD.innerHTML = "Edit";

        }
    }


    function selectElement() {

        var element = document.getElementById("Role");
        element.value = model.role;
    }

    function evalCheckOpcion(id) {
        var tableBody = document.getElementById('divTeamsList');
        if (!isNullOrEmpty(tableBody))
        {
            var miscasillas = tableBody.getElementsByTagName('input');
            var contCheck = 0;
            var listaTorneosvalues = [];

            for (i = 0; i < miscasillas.length; i++) {
                if (miscasillas[i].type == "checkbox") {
                    //console.log(miscasillas[i].checked, miscasillas[i].value, id)

                    if (miscasillas[i].checked) {
                        listaTorneosvalues.push(miscasillas[i].value);
                        contCheck++;

                    }
                }
            }

            $('#Teams').val(listaTorneosvalues);

            var concatTeams = makeString(listaTorneosvalues);
            var TeamsListStr = document.getElementById('TeamsListStr');
            TeamsListStr.value = concatTeams;

        //console.log(listaTorneosvalues);
        //console.log(concatTorneos);
        }
        

    }

    function isNullOrEmpty(str) {
        var returnValue = false;
        if (!str
            || str == null
            || str === 'null'
            || str === ''
            || str === '{}'
            || str === 'undefined'
            || str === '-Select-'
            || str.length === 0) {
            returnValue = true;
        }
        return returnValue;
    }

    function makeString(arr) {

        if (!isNullOrEmpty(arr)) {
            if (arr.length === 1) return arr[0];
            const firsts = arr.slice(0, arr.length - 1);
            const last = arr[arr.length - 1];
            return firsts.join(', ') + ', ' + last;
        }
        else return "";

    }

    $("#profile-form").submit(function (event) {
        /* stop form from submitting normally */
        //event.preventDefault();

        /* get some values from elements on the page: */
        var $form = $(this),
            $submit = $form.find('button[type="submit"]'),
            Nombres = $form.find('input[name="Nombres"]').val(),
            ApellidoPaterno = $form.find('input[name="ApellidoPaterno"]').val(),
            ApellidoMaterno = $form.find('input[name="ApellidoMaterno"]').val(),
            FechaNacimiento = $form.find('input[name="FechaNacimiento"]').val(),
            Email = $form.find('input[name="Email"]').val(),
            Role = $form.find('select[name="Role"]').val(),
            TeamsListStr = $form.find('input[name="TeamsListStr"]').val(),
            url = $form.attr('action');

        var ret = true;

        if (isNullOrEmpty(Nombres)) {
            document.getElementById("requiredNames").style.display = '';
            ret = false;
        }
        else {
            document.getElementById("requiredNames").style.display = 'none';
        }
        if (isNullOrEmpty(ApellidoPaterno)) {
            document.getElementById("requiredFsurname").style.display = '';
            ret = false;
        }
        else {
            document.getElementById("requiredFsurname").style.display = 'none';
        }
        if (isNullOrEmpty(ApellidoMaterno)) {
            document.getElementById("requiredMsurname").style.display = '';
            ret = false;
        }
        else {
            document.getElementById("requiredMsurname").style.display = 'none';
        }
        if (isNullOrEmpty(FechaNacimiento)) {
            document.getElementById("requiredBirthday").style.display = '';
            ret = false;
        }
        else {
            document.getElementById("requiredBirthday").style.display = 'none';
        }
        if (isNullOrEmpty(Email)) {
            document.getElementById("requiredEmail").style.display = '';
            ret = false;
        }
        else {
            document.getElementById("requiredEmail").style.display = 'none';
        }

        if (isNullOrEmpty(Role)) {

            document.getElementById("requiredRole").style.display = '';

            //$submit.text('wrong');
            ret = false;
        }
        else {

            document.getElementById("requiredRole").style.display = 'none';

        }

        //console.log("TeamsListStr: ", TeamsListStr)
        if (isNullOrEmpty(TeamsListStr)) {
            document.getElementById("requiredTeamsListStr").style.display = '';

            //$submit.text('wrong');
            ret = false;
        }
        else {

            document.getElementById("requiredTeamsListStr").style.display = 'none';

        }

        // send your data here, the form should be valid
        //$submit.text('Save');
        //$submit.attr("disabled", true);
        return ret;
    });

    </script>
}






